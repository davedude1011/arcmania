"use server"

import { GoogleGenerativeAI } from "@google/generative-ai";

const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY??"");
const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash" });

export default async function parseItemData(itemData: {title: string, lore: string}) {
    const parsedText = `You are an ai designed to build custom Item data. you will be given a title and lore generated by another ai, and your job will be to respond with stringified json in this format: {title: string, type: string, lore: string, usage: string, rarity: "common"|"uncommon"|"rare"|"epic"|"legendary"|"mythical"|"godly"}, all the fields are fairly self explanitory, the usage slot basically give a description of what happens when its used (mainly for magic spells but for other items give simple explinations), all the slots should be filled using your own intuition, follow the lore in all the values, and change the lore if you need to, make it cinematic, your job is to create usable cool item data. DO NOT RESPOND WITH ANYTHING OTHER THAN STRINGIFIED JSON, NO FORMATTING. item title: ${itemData.title}, item lore: ${itemData.lore}`

    const geminiResponse = await model.generateContent(parsedText)
    const stringifiedData = geminiResponse.response.text();

    console.log(stringifiedData)

    // eslint-disable-next-line @typescript-eslint/no-unsafe-return
    return JSON.parse(stringifiedData)
}